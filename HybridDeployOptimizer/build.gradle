plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'application'
}

group = 'kware'
version = '0.9.23'

sourceCompatibility = '11'
mainClassName = "com.kware.ApplicationMain"

ext.profile = (!project.hasProperty('profile') || !profile)?'local':profile
sourceSets {
	main {
		resources { 
			srcDirs = ["src/main/resources","src/main/resources-env/$profile","src/main/java"]
			//src/main/java 영역에 리스스(xml 등)파일이 있어서, 이 코드가 없으면 java 이외의 파일이 들어가지 않는다.
			//gradlew를 활용할 경우 
		}
	}
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    //maven { url 'https://jitpack.io' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
}

dependencies {
//{{SpringBoot 관련
	implementation('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation('org.springframework.boot:spring-boot-starter-jetty')
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14' //springDoc OpenAPI UI
    
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5' //DB연결시 암호화 처리(url,user,password)-운영만
    
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' //thymeleaf
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'       //thymeleaf layout이 필요한 경우
    
    
    implementation 'org.springframework.boot:spring-boot-starter-amqp' //rabbitmq
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuaor
    implementation 'org.springframework.boot:spring-boot-starter-security'    
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  //junit 등 테스터
    
    // https://mvnrepository.com/artifact/net.minidev/json-smart
	implementation group: 'net.minidev', name: 'json-smart', version: '2.5.0'
    
//}}SpringBoot	

//{{lombok
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
 //}}
 
 //{{swaggger
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0' 
 //}}swagger
    
//{{Application     
    implementation 'org.postgresql:postgresql:42.2.5'
    implementation 'com.h2database:h2:2.2.224'
    //implementation 'io.netty:netty-all:4.1.45.Final' 
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'  
    //implementation 'org.quartz-scheduler:quartz:2.3.2'
    implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'com.jayway.jsonpath:json-path:2.9.0'
//}}Application
	
	//유전자 알고리즘: JGAP (Java Genetic Algorithms Package)
	//implementation 'org.jgap:jgap:3.6.3'
	// https://mvnrepository.com/artifact/io.github.rayinfinite/jgap
	implementation group: 'io.github.rayinfinite', name: 'jgap', version: '3.6.3'
	
	
	//VAR모델
	implementation 'org.apache.commons:commons-math3:3.6.1'
	
	//LSTM 모델
	//{{ND4(ND4J)는 딥러닝 및 머신러닝을 위한 자바 라이브러리로, 다차원 배열 연산을 지원하며 GPU 가속도를 사용
	implementation 'org.nd4j:nd4j-native-platform:1.0.0-M2.1'
    implementation 'org.nd4j:nd4j-api:1.0.0-M2.1'
    implementation 'org.datavec:datavec-api:1.0.0-M2.1'
    implementation 'org.deeplearning4j:deeplearning4j-core:1.0.0-M2.1'
    implementation 'org.deeplearning4j:deeplearning4j-modelimport:1.0.0-M2.1'
    implementation 'org.deeplearning4j:deeplearning4j-nn:1.0.0-M2.1'
    implementation 'org.deeplearning4j:deeplearning4j-ui:1.0.0-M2.1'
    //}}
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

test {
    useJUnitPlatform()
}

/* bootJar에서 yml 파일을 제거하고 프로그램 실행시에 다음처럼 사용 가능 
//java -cp ../conf -Dserver.port=6005 -Dspring.profiles.active=prod -Dfile.encoding=UTF-8 -jar ../libs/BS21ManagerWeb-0.9.jar --spring.config.location=file:../conf/
task copyFiles(type: Copy) {
    from sourceSets.main.resources
    into "$buildDir/conf"
    include '/*.yml'
}

bootJar.dependsOn(copyFiles)

bootJar {
    // 'special-file.xml' 파일을 제외합니다. '/*.xml' , '/*.yml'
    exclude '/*.yml'
}
*/

