spring:
  profiles:
    active: local
   #main.web-application-type: none   #웹서버실행하지 않기
  devtools:
    restart.enabled: false
    livereload.enabled: false
  mvc.pathmatch.matching-strategy: ant-path-matcher
  thymeleaf:
    prefix: classpath:templates/
    check-template-location: true
    suffix: .html
    mode: HTML
    cache: false
  #shutdown  
  pid:
    file: .\.app.loc.pid
  jackson:
    time-zone: Asia/Seoul
    #serialization.WRITE_DATES_AS_TIMESTAMPS: false
    date-format: yyyy-MM-dd HH:mm:ss


  rabbitmq:
    enable: false  #custom 속성: mq를 사용할지 단순하게 api를 사용할지
    host: 172.30.1.35
    port: 5672
    username: admin
    password: admin123!
    exchange:
      policy.name: po_exchane
    queue:
      policy_req.name: po_req_queue
      policy_res.name: po_res_queue
    routing:
      policy_req.key: po_req_key
      policy_res.key: po_res_key

  security:
    user:
      name: admin
      password: admin123!
      roles: ACTUATOR

#actuator를 활성화
management:
  server.port: 8889
  endpoints:
    web.exposure:
        include: "*"
    #jmx.exposure.exclude: "*" 
  security:
    enabled: true
  basic:
    enabled: true

server:
  port: 8898 #8888
  servlet:
    context-path: /
    session:
      timeout: 28800000  # 8 hours in milliseconds
  jetty:     # Jetty 스레드 풀 설정
    threads:
      acceptors: -1 # Number of acceptor threads to use. When the value is -1, the default, the number of acceptors is derived from the operating environment.
      selectors: -1 # Number of selector threads to use. When the value is -1, the default, the number of selectors is derived from the operating environment.
      min: 2 # Minimum number of threads e.g. 8 
      max: 5 # Maximum number of threads e.g. 200
      #max-queue-capacity:  # Maximum capacity of the thread pool's backing queue. A default is computed based on the threading configuration.
      #idle-timeout:  # Maximum thread idle time in millisecond e.g. 60000ms      

#datasource id/pw 암호화 처리  : com/kware/common/config/JasyptConfig.java와 test source 참고하여 username, password를 암호화 처리할 수 있음 
jasypt:
  encryptor:
    bean: jasyptStringEncryptor

hybrid:
  init-sql-location:
    ddl: classpath:db/init/ddl.sql
    insert-data: classpath:db/init/insert*.sql
  collector:
    portal-api:
      url: http://10.10.30.60
      authorization: 9ed36fd5-4c9b-4fba-827c-84edac08637c 
      prometheus:
        authorization: "Basic YWRtaW46cXdlcjEyMzQhQCMk"
        unified_url: http://10.10.30.60:30138/
      finish-enalbe: true
      delete-enalbe: true
    threads: 5
  scheduler:
    threads: 2
  datasource:
    #url: jdbc:log4jdbc:postgresql://172.30.1.35:5433/postgres?currentSchema=k_hybrid
    url: jdbc:log4jdbc:postgresql://172.30.1.30:30007/postgres?currentSchema=k_hybrid
    hikari: 
      jdbcUrl: ${hybrid.datasource.url}
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      username: ENC(HrVw3fiyCLDR948tKQhAejZAT9wpchPEpFFoJG3Y38HWipO+iLHob1pXaX1N+pXg)
      #username: postgres
      password: ENC(/MbRwpHCgQGTORq4/DsIej4lS47MVzdzdW8TPWEthKH+h6P/sCqbru9aLMqV+iQp)
      #password: postgresql!@
      pool-name: hikari-cp
      maximum-pool-size: 5
      minimum-idle: 2
      data-source-properties: 
          cachePrepStmts: true
          prepStmtCacheSize: 250
          prepStmtCacheSqlLimit: 2048
          useServerPrepStmts: true  
  policy:
    resource-weights:
      ml:
        cpu: 4
        gpu: 2
        disk: 3
        memory: 4
      dl:
        cpu: 3
        gpu: 5
        disk: 3
        memory: 4
      inf:
        cpu: 4
        gpu: 2
        disk: 3
        memory: 3
    exclude-namespaces: "string|monitoring|kube-system|calico-.+|tigera-.+|ingress-.+|gpu-operator"
    server:
      h2:
        enable: false
        dbname: policydb
        path:   #mem or null이면 메모리 DB 생성
        port: 
    datasource:
      hikari: 
        jdbcUrl: jdbc:log4jdbc:h2:tcp://localhost:9093/mem:policydb
        #jdbcUrl: jdbc:log4jdbc:h2:mem:policydb
        driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
        username: sa
        password: 1234
        pool-name: hikari-cp
        maximum-pool-size: 10
        minimum-idle: 2
        data-source-properties: 
            cachePrepStmts: true
            prepStmtCacheSize: 250
            prepStmtCacheSqlLimit: 2048
            useServerPrepStmts: true 
            